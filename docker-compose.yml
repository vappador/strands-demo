services:
  # Builds the polyglot test image and exits immediately.
  polytest:
    build:
      context: .
      dockerfile: Dockerfile.polytest
      # Uncomment if you need to force a specific architecture on Apple Silicon:
      # platforms:
      #   - linux/amd64
    image: strands/polytest:latest
    command: ["/bin/true"]
    # no volumes/ports needed

  agent:
    build:
      context: .
    depends_on:
      polytest:
        condition: service_completed_successfully

    container_name: strands-codeops-agent
    env_file:
      - .env
    environment:
      LOG_LEVEL: ${LOG_LEVEL:-DEBUG}
      VERBOSE_RUN: ${VERBOSE_RUN:-1}

      # Force non-AWS provider & block IMDS noise
      AWS_EC2_METADATA_DISABLED: "true"
      AWS_METADATA_SERVICE_TIMEOUT: "1"
      AWS_METADATA_SERVICE_NUM_ATTEMPTS: "1"
      BOTO_CONFIG: /dev/null

      # Model routing -> Ollama on the host
      STRANDS_MODEL_PROVIDER: "ollama"
      OLLAMA_HOST: "http://host.docker.internal:11434"
      STRANDS_MODEL: "${STRANDS_MODEL:-qwen2.5-coder:3b}"

      # Make the runner use the prebuilt image
      TEST_IMAGE: "strands/polytest:latest"
      # Optionally force platform for the runner if needed (Apple Silicon):
      # TEST_IMAGE_PLATFORM: "linux/amd64"

    extra_hosts:
      - "host.docker.internal:host-gateway"

    command: >
      uvicorn fastapi_app:app --host 0.0.0.0 --port 8088 --reload
      --reload-dir app
      --reload-include 'app/**/*.py'
      --reload-exclude 'jobs/*'
      --reload-exclude 'jobs/**'

    working_dir: /workspace
    ports:
      - "8088:8088"
    volumes:
      - ./:/workspace
      - ./templates:/workspace/templates:ro
      - ./jobs:/workspace/jobs
      - /var/run/docker.sock:/var/run/docker.sock

    # Healthcheck: app AND Ollama must both be up
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -sf http://localhost:8088/health >/dev/null && OURL=$${OLLAMA_HOST:-http://host.docker.internal:11434} && curl -sf \"$${OURL}/api/tags\" >/dev/null"
        ]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 10s

    restart: unless-stopped
    tty: true
    stdin_open: true

    # Compose v2.22+ live sync/rebuild
    develop:
      watch:
        - path: .
          target: /workspace
          action: sync
          ignore:
            - ".git/**"
            - ".idea/**"
            - ".vscode/**"
            - "__pycache__/**"
            - "**/*.pyc"
            - ".pytest_cache/**"
            - ".venv/**"
            - "jobs/**"
        - path: requirements.txt
          action: rebuild
        - path: Dockerfile
          action: rebuild
        - path: templates
          target: /workspace/templates
          action: sync
